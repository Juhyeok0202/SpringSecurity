1. 열쇠 전달 문제
2. 넌 누구야? 라는 인증 문제

1. A가 B에게 문서를 보낼 건데 중간에 있는 C가 가로채면 이 문서 확인가능
그래서 이 문서를 암호화 시킴. 이 암호화를 한 열쇠를 abc키라하자.
abc키가 없으면 문서를 열어볼 수 없으므로, 열쇠도 같이 전달해야함.
그럼 C또한 이를 가로채서 확인 할 수 있음

2. 누군가 A가 암호화를 해서 보낸 문서를 C가 가로챘다.
이 내용을 조작하여 B에게 전달하는 문제를 없애야함.

⭐RSA라는 암호화에 대해 이야기해보자

public Key
:공개키

private Key
:개인키

A와 B가 있고 가운데 해커가 있다.
A----사랑해--->B 과정에서 해커가 가로챌 ㅅ ㅜ있음

A가 사랑해라는 메세지는 공개키로 암호화 하여 보낸다.
근데 여기서 A가 공개키로 암호화를 했고, "공개키(암호화)" 이것을 보낸다.
이때 이 공개키가 B의 공개키이어야 한다. 이것을 공개키 기반 암호화라 함.
(B의 공개키를 A가 다운받아서 B공개키로 문서를 잠그고 전달)
중간에 해커가 가로채면 메세지 읽을 수 X => 열 수 있는 사람은 B의 개인키를 들고 있는 사람 ⭐⭐⭐⭐
B는 자신의 개인키로 문서를 복호화하여 봄.
따라서!!!! 1.열쇠 전달 문제는 키가 2개니까 공개키를 공개해버리고 개인키를 가지고 있으면됨.

무슨 말이냐면,
A는 개인키A와 공개키A를 가지고 있고
B도 마찬가지로 개인키B와 공개키B를 가지고 있다.

개인키는 자기 자신만 가지고 있어야하며, 공개키는 공개가능
여기서 키 하나도 잠구고 풀면 -> 1쌍: 키하나: semantic키(대칭키) 라 한다.


이제 2.넌 누구냐 ?! 를 해결

이번에는 A가 B에게 "A가 C에게 1억을 송금했다" 메세지를 보내고싶음
이것을 뭐로 암호화 할 것이냐면, A의 개인키로 암호화
중간에 해커가 문서를 가로채면 열어볼 수 있음=> A의 개인키로 잠궜으니 A의 공개키로 열어볼 수 있다.
A라는 애가 적었다는 것이 중요함. B는 A의 공개키로 열어봄.
확실히 A가 적은 글이 맞구나. 왜냐면 A의 개인키로 잠궜으니 A의 공개키로만 열릴 것. 발신자를 알 수 있음.
"전자 문서에서 서명으로 쓰임. "

⭐⭐⭐
디지털 세상에서 인증방식으로 사용되는 것은 : 개인키로 잠구는 것
디지털 세상에서 암호화로 사용이 되는 것은 : 공개키로 잠구는 것

공개키로 잠구면 개인키로 열 수 있다(암호화를 의미)
개인키로 잠구면 공개키로 열 수 있다(전자서명 의미)

이것이 RSA!!!

그럼 이렇게 한 번 보내볼게요.
A가 B에게 1234라는 비밀번호를 보낸다 하자.
이것은 B의 공개키로 잠궈야 B만 열어볼 수 있음.
그럼 중간에 해커가 아예 데이터를 가로채 날려버리고 새로운 데이터 보낼 수 있음.
그래서, 이것을 해결하려면
A의 개인키로 한번 더 잠금.
즉, ⭐ (A의 개인키(B의 공개키 :1234)) 형태로 잠궈 전송

그럼 protocol이 만들어짐
B가 문서를 열람하는 방법은
1.문서를 받으면
2.A의 공개키로 열어본다.
3.(열리면) 인증이 해결⭐
4.(안열리면) 인증이 안되었으니 볼 가치가 없음 가로채서 만들어진 데이터일 수 O
3-1. B의 개인키로 열어봄 -> 데이터 확인⭐